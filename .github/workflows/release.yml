name: Release

on:
  push:
    branches:
      - master
      - 'releases/**'
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      registry:
        type: string
      image-name:
        type: string
      dockerfile:
        type: string
        default: Dockerfile

env:
  DEFAULT_REGISTRY: ghcr.io

  #      token: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build:
    name: Build And Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup vars
        id: vars
        shell: bash
        run: |
          echo registry=${{ inputs.registry || env.DEFAULT_REGISTRY }} >> $GITHUB_OUTPUT
          echo image-name=${{ inputs.image-name || github.repository }} | tr . - >> $GITHUB_OUTPUT

      - name: Debug vars
        run: |
          echo "registry=${{ steps.vars.outputs.registry }}"
          echo "image-name=${{ steps.vars.outputs.image-name }}"
          echo "github.repository=${{ github.repository }}"
          echo "github.event.repo.name=${{ github.event.repo.name }}"

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.vars.outputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.vars.outputs.registry }}/${{ steps.vars.outputs.image-name }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # no-cache: true
          provenance: false
            # VERSION=${{ steps.meta.outputs.labels."org.opencontainers.image.version" }}-${{ steps.meta.outputs.labels."org.opencontainers.image.revision" }}
          build-args: |
            VERSION=${{ github.ref_name }}-${{ github.sha }}
            ${{ inputs.build-args }}
